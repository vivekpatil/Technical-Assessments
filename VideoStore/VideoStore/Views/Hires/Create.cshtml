@model VideoStore.Models.Hire

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Hire</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserId)
        </div>
        <div class="editor-field">
          @*  @Html.EditorFor(model => model.UserId)
            @Html.ValidationMessageFor(model => model.UserId)*@
            
            @*@Html.DropDownList("UserId",(IEnumerable<SelectListItem>)ViewData["UserList"],new {id="UserId"})*@
            
            @Html.DropDownList("User",new SelectList(ViewBag.UserList,"Value","Text"))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VideoId)
        </div>
        <div class="editor-field">
           @* @Html.EditorFor(model => model.VideoId)
            @Html.ValidationMessageFor(model => model.VideoId)*@
            
            @*@Html.DropDownList("VideoId",(IEnumerable<SelectListItem>)ViewData["VideoList"],new {id="VideoId"})*@
            
            @Html.DropDownList("Video",new SelectList(ViewBag.VideoList,"Value","Text"))
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HireDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HireDate)
            @Html.ValidationMessageFor(model => model.HireDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReturnDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReturnDate)
            @Html.ValidationMessageFor(model => model.ReturnDate)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

